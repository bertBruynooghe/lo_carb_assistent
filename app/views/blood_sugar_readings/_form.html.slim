= form_for @blood_sugar_reading do |f|
  - if @blood_sugar_reading.errors.any?
    #error_explanation
      h2 = "#{pluralize(@blood_sugar_reading.errors.count, "error")} prohibited this blood_sugar_reading from being saved:"
      ul
        - @blood_sugar_reading.errors.full_messages.each do |message|
          li = message

  .field
    = f.label :value
    = f.number_field :value
  .field
    = f.label :read_time
    = f.datetime_select :read_time
  javascript:
    function timeFromSelect(id) {
      year = parseInt($(id+'_1i').val());
      month = parseInt($(id+'_2i').val()) - 1;
      date = parseInt($(id+'_3i').val());
      hour = parseInt($(id+'_4i').val());
      minute = parseInt($(id+'_5i').val());
      return new Date(year, month, date, hour, minute);
    }

    function timeToSelect(id, date){
      $(id+'_1i').val(date.getFullYear());
      $(id+'_2i').val(date.getMonth() + 1);
      $(id+'_3i').val(date.getDate());
      $(id+'_4i').val((date.getHours()+100+'').slice(1));
      $(id+'_5i').val((date.getMinutes()+100+'').slice(1));
    }

    function timeSelectInLocalTimezone(id){
      offset_min = new Date().getTimezoneOffset();
      date = timeFromSelect(id).valueOf();
      date = new Date(date - offset_min * 60000);
      timeToSelect(id, date);
      $(id +'_1i').parents('form').on('submit', function(){
        date = timeFromSelect(id).valueOf();
        date = new Date(date + offset_min * 60000);
        timeToSelect(id, date);
      });
    }

    $(function(){
      timeSelectInLocalTimezone('#blood_sugar_reading_read_time')
    });

  .actions = f.submit
