import { Controller } from '@hotwired/stimulus'
import ejs from 'ejs'

import I18n from '../i18n.js.erb'
import dbConnection from '../db_connection'
import rowPartial from '_meals_row.html.erb'

const button_to = label => `<input type="submit" value="${label}">`
const { t } = I18n
export default class extends Controller {
  static targets = ['tableBody', 'networkBusy']

  async connect() {
    const transaction = (await dbConnection).transaction('meals', 'readonly')
    const meals = transaction.objectStore('meals')
    const request = meals.count()
    request.onsuccess = () => console.log('meals', request.result)

    const result = await fetch('<%= Rails.application.routes.path_for(controller: :meals, action: :index) %>.json')
    if (!result.ok) return // TODO: proper handling of the error

    this.networkBusyTarget.hidden = true

    const rows = (await result.json()).reverse()
 
    console.log('fetch', result.status, rows)
    rows.forEach(meal => {
      const temp = document.createElement('template')
      temp.innerHTML = ejs.render(rowPartial, { meal, t, button_to }, { escape: s => s }).trim()
      this.tableBodyTarget.prepend(temp.content.firstChild)
    })
  }
}
